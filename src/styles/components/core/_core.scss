@use 'sass:map';
@use 'node_modules/@angular/material/index' as mat;
@use 'src/styles/components/toolbar/variables' as toolbar-variables;
@use 'src/styles/mixins' as mixins;
@use 'src/styles/variables' as variables;
@use 'src/styles/typography' as typography;

@mixin color($config-or-theme) {
    $config: mat.get-color-config($config-or-theme);
    $primary: map.get($config, primary);
    $is-dark: map.get($config, is-dark);

    ::selection {
        @include mixins.palette-styles($primary, if($is-dark, 50, 900), if($is-dark, darker, lighter));
    }

    ::-moz-selection {
        @include mixins.palette-styles($primary, if($is-dark, 50, 900), if($is-dark, darker, lighter));
    }
}

@mixin typography($config-or-theme) {
}

@mixin density($config-or-theme) {

    html, body {
        height: 100%;
    }

    div.container-fluid {
        // 100% view height - (header height + footer height) - margin
        min-height: calc(100vh - (#{toolbar-variables.$height-desktop} + #{toolbar-variables.$height-desktop})) !important;
        @media (variables.$xsmall) {
            min-height: calc((var(--vh, 1vh) * 100) - (#{toolbar-variables.$height-mobile} + #{toolbar-variables.$height-mobile})) !important;
        }
    }
}

@mixin theme($config-or-theme) {
    $config: mixins.legacy-get-theme($config-or-theme);
    $color: mat.get-color-config($config);
    $density: mat.get-density-config($config);

    @if $color != null {
        @include color($color);
    }

    @if $density != null {
        @include density($density);
    }
}
