@use 'sass:map';
@use 'node_modules/@angular/material/index' as mat;
@use 'node_modules/@angular/material/core/theming/theming' as theming;
@use 'node_modules/@angular/material/core/typography/typography' as typography;
@use 'node_modules/@angular/material/core/typography/typography-utils' as typography-utils;
@import 'src/styles/mixins';

@mixin color($config-or-theme) {
    $config: mat.get-color-config($config-or-theme);
    $primary: map.get($config, primary);
    $accent: map.get($config, accent);
    $warn: map.get($config, warn);
    $background: map.get($config, background);
    $foreground: map.get($config, foreground);

    $themes: (
        primary: $primary,
        accent: $accent,
        warn: $warn,
    );

    .mat-drawer {
        @each $name, $color in $themes {
            &.mat-#{$name} {
                @include palette-styles($color, 900, lighter);
            }
        }
    }

}

@mixin typography($config-or-theme) {
    $config: typography.private-typography-to-2014-config(theming.get-typography-config($config-or-theme));

    .mat-drawer {
        .mat-drawer-inner-container .mat-button {
            line-height: typography-utils.line-height($config, body-2);
        }
    }
}

@mixin density($config-or-theme) {
    .mat-drawer {
        padding: 0.5rem;

        .mat-drawer-inner-container, .mat-drawer-inner-container .mat-button > .mat-button-wrapper {
            display: flex;
            flex-direction: column;
            align-items: center;

            .menu-toggle {
                margin-bottom: 1.5rem;
            }
        }

        .mat-button:not(.menu-toggle) ~ .mat-button:not(.settings) {
            $button-margin: 1.5rem;

            &.mat-icon-button {
                margin: calc($button-margin / 3);
            }

            margin: $button-margin 0;
        }

        &.minimised {
            $minimised-padding-margin: 0.25rem;
            padding: $minimised-padding-margin;

            .menu-toggle {
                margin-top: $minimised-padding-margin;
            }
            .settings {
                margin-bottom: $minimised-padding-margin;
            }
        }
    }
}

@mixin theme($config-or-theme) {
    $config: theming.private-legacy-get-theme($config-or-theme);
    $color: mat.get-color-config($config);
    $density: mat.get-density-config($config);

    @if $color != null {
        @include color($color);
    }

    @if $density != null {
        @include density($density);
    }
}
